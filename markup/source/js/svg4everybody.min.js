!(function (a, b) {
  typeof define === 'function' && define.amd
    ? define([], () => (a.svg4everybody = b()))
    : typeof module === 'object' && module.exports
      ? (module.exports = b())
      : (a.svg4everybody = b());
}(this, () => {
  function a(a, b, c, d) {
    if (c) {
      const e = document.createDocumentFragment();
      const f = !b.hasAttribute('viewBox') && c.getAttribute('viewBox');
      f && b.setAttribute('viewBox', f);
      for (
        var g = document.importNode ? document.importNode(c, !0) : c.cloneNode(!0),
          h = document.createElementNS(b.namespaceURI || 'http://www.w3.org/2000/svg', 'g');
        g.childNodes.length;

      ) h.appendChild(g.firstChild);
      if (d) {
        for (let i = 0; d.attributes.length > i; i++) {
          const j = d.attributes[i];
          j.name !== 'xlink:href' && j.name !== 'href' && h.setAttribute(j.name, j.value);
        }
      }
      e.appendChild(h), a.appendChild(e);
    }
  }
  function b(b, c) {
    (b.onreadystatechange = function () {
      if (b.readyState === 4) {
        let d = b._cachedDocument;
        d
          || ((d = b._cachedDocument = document.implementation.createHTMLDocument('')),
          (d.body.innerHTML = b.responseText),
          (b._cachedTarget = {})),
        b._embeds.splice(0).map((e) => {
          let f = b._cachedTarget[e.id];
          f || (f = b._cachedTarget[e.id] = d.getElementById(e.id)), a(e.parent, e.svg, f, c);
        });
      }
    }),
    b.onreadystatechange();
  }
  function c(c) {
    function e() {
      for (let c = 0; c < o.length;) {
        const h = o[c];
        const i = h.parentNode;
        const j = d(i);
        if (j) {
          const k = h.getAttribute('xlink:href') || h.getAttribute('href');
          if (f) {
            if (!g.validate || g.validate(k, j, h)) {
              i.removeChild(h);
              const l = k.split('#');
              const q = l.shift();
              const r = l.join('#');
              if (q.length) {
                let s = m[q];
                s
                  || ((s = m[q] = new XMLHttpRequest()), s.open('GET', q), s.send(), (s._embeds = [])),
                s._embeds.push({ parent: i, svg: j, id: r }),
                b(s, h);
              } else a(i, j, document.getElementById(r), h);
            } else ++c, ++p;
          }
        } else ++c;
      }
      (!o.length || o.length - p > 0) && n(e, 67);
    }
    let f;
    var g = Object(c);
    const h = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/;
    const i = /\bAppleWebKit\/(\d+)\b/;
    const j = /\bEdge\/12\.(\d+)\b/;
    const k = /\bEdge\/.(\d+)\b/;
    const l = window.top !== window.self;
    f = 'polyfill' in g
      ? g.polyfill
      : h.test(navigator.userAgent)
          || (navigator.userAgent.match(j) || [])[1] < 10547
          || (navigator.userAgent.match(i) || [])[1] < 537
          || (k.test(navigator.userAgent) && l);
    var m = {};
    var n = window.requestAnimationFrame || setTimeout;
    var o = document.getElementsByTagName('use');
    var p = 0;
    f && e();
  }
  function d(a) {
    for (var b = a; b.nodeName.toLowerCase() !== 'svg' && (b = b.parentNode););
    return b;
  }
  return c;
}));
